[
  {
    "objectID": "posts/2022-04-02-quickie-for-importing-tasks-to-omnifocus-3/index.html",
    "href": "posts/2022-04-02-quickie-for-importing-tasks-to-omnifocus-3/index.html",
    "title": "Quickie for importing tasks to OmniFocus 3",
    "section": "",
    "text": "Well, sort of. I used it a ton in version 1.0 and then eventually stopped. Then I used it again a ton when version 2 came out, and then eventually stopped. It worked well when I really forced myself to use it, but eventually I’d run out of gas, and it always bugged me a bit that I couldn’t get a handle on why. I read David Allen’s “Getting Things Done”, which it was inspired by, and it all made sense, but it still just had a lot of friction to keep using.\nOne of the problems, I now realize, was the notion of contexts - each to-do item could be assigned to one, and only one, context, like “online” or “supermarket” or “home”, describing the setting where a task could be done. The problem was that there were many tasks that could be done in multiple contexts, but no way to mark them as such. One user I talked with on one of the forums explained that the way to think about it was that I myself could be in multiple simultaneous contexts, like “home” and “online”, and that tasks that matched either of those would appear. It sort of made sense, but it still never felt natural and I eventually dropped it again.\nI checked it out again in version 3, and the problem has been solved: contexts are gone, replaced by the much more versatile and familiar concept of tags. Tags can be freely defined, and any item can have as many tags as you want. So now I’m using it again and finding it much easier to get along with.\n(I also really appreciate that there is the option to just pay for it straight up, though they also offer the odious subscription-based pricing that everybody except developers hates. There is upgrade pricing from prior versions that makes it more affordable. They also offer educational pricing, so between my educational pricing and upgrade discount, OF3 went from $99 to about $38. Sold.)\nIt’s full of really nice little interface touches that are almost invisible but that make life very pleasant. One of them is the ability to import tasks in TaskPaper format, which is very straightforward. I needed to add a list of 24 assignments (sigh) to my inbox, one per day for the next 24 days. I had them typed out, and with the help of a few emacs macros added due dates and tags, using the following format:\n- task description @tags(tag1, tag2) @due(YYYY-MM-DD HH:MM)\nSo my full list was:\n- (ch 3) Simple linear regression @tags(Machine Learning, Homework) @due(2022-04-02 23:59)\n- (ch 3) Multiple linear regression @tags(Machine Learning, Homework) @due(2022-04-03 23:59)\n- (ch 4) Logistic regression @tags(Machine Learning, Homework) @due(2022-04-04 23:59)\n- (ch 4) Multiple logistic regression @tags(Machine Learning, Homework) @due(2022-04-05 23:59)\n- (ch 4) Linear discriminant analysis @tags(Machine Learning, Homework) @due(2022-04-06 23:59)\n- (ch 4) Quadratic discriminant analysis @tags(Machine Learning, Homework) @due(2022-04-07 23:59)\n- (ch 4) Naive Bayes @tags(Machine Learning, Homework) @due(2022-04-08 23:59)\n- (ch 4) K-Nearest Neighbors @tags(Machine Learning, Homework) @due(2022-04-09 23:59)\n- (ch 4) Poisson regression @tags(Machine Learning, Homework) @due(2022-04-10 23:59)\n- (ch 5) Cross-validation @tags(Machine Learning, Homework) @due(2022-04-11 23:59)\n- (ch 5) Bootstrap @tags(Machine Learning, Homework) @due(2022-04-12 23:59)\n- (ch 6) Best subset selection @tags(Machine Learning, Homework) @due(2022-04-13 23:59)\n- (ch 6) Stepwise selection @tags(Machine Learning, Homework) @due(2022-04-14 23:59)\n- (ch 6) Ridge regression @tags(Machine Learning, Homework) @due(2022-04-15 23:59)\n- (ch 6) Lasso @tags(Machine Learning, Homework) @due(2022-04-16 23:59)\n- (ch 6) Principal component regression @tags(Machine Learning, Homework) @due(2022-04-17 23:59)\n- (ch 8) Bagging @tags(Machine Learning, Homework) @due(2022-04-18 23:59)\n- (ch 8) Random forests @tags(Machine Learning, Homework) @due(2022-04-19 23:59)\n- (ch 8) Boosting @tags(Machine Learning, Homework) @due(2022-04-20 23:59)\n- (ch 8) Bayesian Additive Regression Trees @tags(Machine Learning, Homework) @due(2022-04-21 23:59)\n- (ch 9) Support Vector Machines @tags(Machine Learning, Homework) @due(2022-04-22 23:59)\n- (ch 12) Principal component analysis @tags(Machine Learning, Homework) @due(2022-04-23 23:59)\n- (ch 12) K-means clustering @tags(Machine Learning, Homework) @due(2022-04-24 23:59)\n- (ch 12) Hierarchical clustering @tags(Machine Learning, Homework) @due(2022-04-25 23:59)\nCopy the entire list, and then just paste into the inbox, and voilà:\n\n\n\nInbox\n\n\nNow the problem is I have to actually do all of those things. (But at least I can check off the top item for the new blog post.)\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@online{linberg2022,\n  author = {Steve Linberg},\n  editor = {},\n  title = {Quickie for Importing Tasks to {OmniFocus} 3},\n  date = {2022-04-02},\n  url = {https://slinberg.net/posts/2022-04-02-quickie-for-importing-tasks-to-omnifocus-3},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nSteve Linberg. 2022. “Quickie for Importing Tasks to OmniFocus\n3.” April 2, 2022. https://slinberg.net/posts/2022-04-02-quickie-for-importing-tasks-to-omnifocus-3."
  },
  {
    "objectID": "posts/2022-02-02-pythagorean-theorem/index.html",
    "href": "posts/2022-02-02-pythagorean-theorem/index.html",
    "title": "Pythagorean Theorem",
    "section": "",
    "text": "The Euclidean distance \\(d\\) between the origin (\\(0, 0, \\dots 0\\)) and a point defined by \\(n\\) coordinates \\(x\\) is just\n\\[d = \\sqrt{x_1^2 + x_2^2 + \\dots + x_n^2}\\]\nAdd up all of the squares and take the square root. Dope-smack for me.\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@online{linberg2022,\n  author = {Steve Linberg},\n  editor = {},\n  title = {Pythagorean {Theorem}},\n  date = {2022-02-02},\n  url = {https://slinberg.net/posts/2022-02-02-pythagorean-theorem},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nSteve Linberg. 2022. “Pythagorean Theorem.” February 2,\n2022. https://slinberg.net/posts/2022-02-02-pythagorean-theorem."
  },
  {
    "objectID": "posts/2022-02-19-playfair-and-the-flatten-the-curve-graphic/index.html",
    "href": "posts/2022-02-19-playfair-and-the-flatten-the-curve-graphic/index.html",
    "title": "Playfair and the “Flatten the Curve” Graphic",
    "section": "",
    "text": "Information, that is imperfectly acquired, is generally as imperfectly retained; and a man who has carefully investigated a printed table, finds, when done, that he has only a very faint and partial idea of what he has read; and that like a figure imprinted on sand, is soon totally erased and defaced.\n\nThis speaks to the general principle, widely accepted now but less so at that time, that tables of data can be hard to interpret and understand, and that knowledge gained from them is fleeting. Deep truths revealed by diligent statistical analysis are of limited value if they can’t make themselves readily understood, and if they don’t stick in the minds of viewers.\nOne of the great recent triumphs of visual design was the justly-famous “Flatten the Curve” graphic that illustrated the need to keep the rates of COVID-19 transmission low enough that hospitals could keep up and not be overwhelmed. It actually originated from the CDC in a 2007 publication with a title only a career bureaucrat could love: “Interim Pre-Pandemic Planning Guidance : Community Strategy for Pandemic Influenza Mitigation in the United States : Early, Targeted, Layered Use of Nonpharmaceutical Interventions” (Centers for Disease Control and Prevention (U.S.) 2007):\n\n\n\nThe CDC’s original “Flatten the Curve” graphic (2007)\n\n\nPonderous as the document’s title may be, this graphic nonetheless showed this nontrivial concept very well. The solid-colored curve was the bad scenario of an outbreak of a pandemic with no intervention, and the transparent curve was a view of squishing that outbreak down over time so that it would be more manageable.\nAs brilliant as the design was - far, far more effective than paragraphs of explanatory text with supporting tables of data - it was still a bit text-heavy, with two text axes and five chunks of (small) inline text that had to be read to fully understand its meaning, and similarly-colored curves showing the two different outcomes, so it wasn’t quite a glance-level chart that could be instantly understood. When COVID-19 hit in 2019, this graphic was popularized and went through many iterations of further simplification, to make its message as clear and impactful as possible. The New York Times published this version in 2020 (Roberts 2020):\n\n\n\nThe NYT’s simplified graphic (2020)\n\n\nThis is even more effective: the text and colors are bold and easy to read, the axis text is simplified, there are only three elements of text in the graph (each only three words), and a third item has been added: a horizontal line indicating the healthcare system’s capacity. This is about as simple and direct as it’s possible to make this information. It communicated a complex problem in a way that could be instantly understood, by almost anyone, regardless of education levels. It may have saved millions of lives, by being shared around the world and absorbed into the collective human understanding of what needed to happen to make the pandemic as manageable as possible.\n(Another very subtle and effective change was the rendering of both curves as slightly irregular in shape, as opposed to the mathematically perfect normal-distribution forms in the CDC’s original graphic; this would help to reinforce the notion that infection / hospitalization / death rates from the pandemic would not follow shapes that could be precisely predicted, though overall trends could still be forecast.)\nNot every complex social phenomenon can be rendered into such an effective message, but good data science should always strive for this level of simplicity and clarity when the purpose is to communicate something important as broadly and effectively as possible.\n\n\n\n\nReferences\n\nCenters for Disease Control and Prevention (U.S.). 2007. “Interim Pre-Pandemic Planning Guidance : Community Strategy for Pandemic Influenza Mitigation in the United States : Early, Targeted, Layered Use of Nonpharmaceutical Interventions.” https://stacks.cdc.gov/view/cdc/11425.\n\n\nRoberts, Siobhan. 2020. “Flattening the Coronavirus Curve.” The New York Times, March. https://www.nytimes.com/article/flatten-curve-coronavirus.html.\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@online{linberg2022,\n  author = {Steve Linberg},\n  editor = {},\n  title = {Playfair and the “{Flatten} the {Curve}” {Graphic}},\n  date = {2022-02-19},\n  url = {https://slinberg.net/posts/2022-02-19-playfair-and-the-flatten-the-curve-graphic},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nSteve Linberg. 2022. “Playfair and the ‘Flatten the\nCurve’ Graphic.” February 19, 2022. https://slinberg.net/posts/2022-02-19-playfair-and-the-flatten-the-curve-graphic."
  },
  {
    "objectID": "posts/2022-10-01_distill_to_quarto_part_1/index.html",
    "href": "posts/2022-10-01_distill_to_quarto_part_1/index.html",
    "title": "Porting slinberg.net from Distill to Quarto",
    "section": "",
    "text": "Quarto: all the cool kids are doing it.\nSetting aside the whys, this is a narrative of the hows - narrating the conversion of this site from Distill to Quarto as I go. This process was done with RStudio version 2022.07.11."
  },
  {
    "objectID": "posts/2022-10-01_distill_to_quarto_part_1/index.html#the-process-so-far",
    "href": "posts/2022-10-01_distill_to_quarto_part_1/index.html#the-process-so-far",
    "title": "Porting slinberg.net from Distill to Quarto",
    "section": "The process so far",
    "text": "The process so far\nUp to this point, the steps have been:\n\nUse RStudio to create a new “Quarto Website” project, which I inspiringly named quarto-blog, which will also be the Github repository name\nSeparately download the standalone Quarto CLI, for purposes yet to be determined\nRead a couple of the early Distill-to-Quarto narratives, such as\n\nKarat Sidhu - Converting a distill website to Quarto\nDanielle Navarro - Porting a distill blog to quarto\n\nSet a few of the basic options in the site’s _quarto.yml file (title, description, site-url, etc)\nCreated this as-of-this-typing-unsaved blog post as a new Quarto Document inside the project\nCheck RStudio’s Render on Save option in the file header, which quickly rebuilds the skeletal site on saves (of this file)"
  },
  {
    "objectID": "posts/2022-10-01_distill_to_quarto_part_1/index.html#creating-a-this-blog-post",
    "href": "posts/2022-10-01_distill_to_quarto_part_1/index.html#creating-a-this-blog-post",
    "title": "Porting slinberg.net from Distill to Quarto",
    "section": "Creating a (this) blog post",
    "text": "Creating a (this) blog post\nSo one immediate difference in terms of workflow is that the Quarto CLI doesn’t have - as of version 1.1.251, anyway - commands for creating blog post files. In Distill, you would say create_post(\"Foo\") in the RStudio console, and that would create a skeleton with some base infrastructure, some automatic date-fu, etc. It would be easy enough to build a quick utility for doing this, but I kind of like that a blog post appears to just be a file (OK, a directory with an index.qmd file) inside the top-level posts directory.\nSo I’m going to save this file in the path posts/2022-10-01_distill_to_quarto_part_1/index.qmd, and that’s all that’s needed to make it a blog post. Yes, I’m typing out the date and title by hand, which is slightly more tedious than Distill, but I also know there’s nothing special going on under the hood when I add this file.\nWhy name the folder …distill_to_quarto_part_1 instead of just distill_to_quarto? Because I’m pretty sure I read somewhere that there’s a context where blog post titles can be disambiguated from their date prefixes, and so I want the title to be unique enough to withstand that if I add another similarly-titled post in the future. Not feeling super confident about this decision so far, but there it is.\n(See That pesky first image in Appendix A below for the first snag: the first, or “listing”, image, and a pathname problem in Quarto.)"
  },
  {
    "objectID": "posts/2022-10-01_distill_to_quarto_part_1/index.html#getting-the-groovy-table-of-contents",
    "href": "posts/2022-10-01_distill_to_quarto_part_1/index.html#getting-the-groovy-table-of-contents",
    "title": "Porting slinberg.net from Distill to Quarto",
    "section": "Getting the groovy table of contents",
    "text": "Getting the groovy table of contents\nThe table of contents (to the left in desktop mode) automatically appears once you have headers in the document structure. Each document’s (or post’s) title is rendered as an h1 tag above the body, but you need to have at least one h2 tag for the table of contents to appear.\nTo make this work in the posts directory (or presumably any directory), it needs to be specified in the directory’s _metadata.yml file (so in this case, posts/_metadata.yml) like this:\n# Default for table of contents\ntoc: true\ntoc-title: Table of contents\ntoc-location: left\nI believe that was there by default; it could be moved over to the right if you wanted something else in the left margin, like a site directory or something.\n\nGithub links\nAt least in the default configuration, this is also where your github links configured for this specific page will appear. Unfortunately, that means they won’t appear if your document lacks h2 tags, and consequently the table of contents isn’t built. I’d prefer to have these links appear regardless, and separate from the table of contents; putting that on my mental list of things to figure out."
  },
  {
    "objectID": "posts/2022-10-01_distill_to_quarto_part_1/index.html#deleting-the-two-sample-posts",
    "href": "posts/2022-10-01_distill_to_quarto_part_1/index.html#deleting-the-two-sample-posts",
    "title": "Porting slinberg.net from Distill to Quarto",
    "section": "Deleting the two sample posts",
    "text": "Deleting the two sample posts\nNow that this document is saved, establishing the blog structure, let’s nuke the two sample posts the site was initialized with; this, happily, is just a matter of deleting the directories posts/post-with-code and welcome.\n\nJust deleting the directories re-renders the site, and they’re gone. Nice that there’s nothing else to that.\n(Doing this did appear to confuse RStudio the next time I saved this file, though, and caused a new render process to start, stranding the prior preview tab in my browser and opening a new one. Still a few early-launch kinks to work out here, unsurprisingly…)\nPS. WHOA! that image is way too big. Let’s scale it down. Change the … do we still call this snippet rmarkdown? … from this:\n![](delete-posts.png)\nto this:\n![](delete-posts.png){width=50%}\n\nThat’s better. That was a screengrab from a high-res display, so downscaling it by 50% was the right approach."
  },
  {
    "objectID": "posts/2022-10-01_distill_to_quarto_part_1/index.html#create-the-missing-repo-and-push",
    "href": "posts/2022-10-01_distill_to_quarto_part_1/index.html#create-the-missing-repo-and-push",
    "title": "Porting slinberg.net from Distill to Quarto",
    "section": "Create the missing repo and push",
    "text": "Create the missing repo and push\nThis is all going fine, but I haven’t actually created the GitHub repo yet, so now it’s time to do that. Once I’m happy with how it looks, I’ll need to update the publishing process to unhook the distill-blog project from my domain and replace it with this one, but for now I just want to be able to push the project.\nCreated the public project as “quarto-blog”, and now from the terminal:\ngit remote add origin git@github.com:stevelinberg/quarto-blog.git\ngit add .\ngit commit -m \"Initial commit\"\ngit push -u origin main"
  },
  {
    "objectID": "posts/2022-10-01_distill_to_quarto_part_1/index.html#migrating-a-post-from-the-distill-blog",
    "href": "posts/2022-10-01_distill_to_quarto_part_1/index.html#migrating-a-post-from-the-distill-blog",
    "title": "Porting slinberg.net from Distill to Quarto",
    "section": "Migrating a post from the Distill blog",
    "text": "Migrating a post from the Distill blog\nPosts are just directories, so we’ll copy the last old post from the distill project into the posts directory and see what we need to do to make it work.\ncp -r ../distill-blog/_posts/2022-04-02-quickie-for-importing-tasks-to-omnifocus-3 posts/\n\n\n\n\n\n\nImportant\n\n\n\nNote: if you’re a command-line wonk like me and not dragging-and-dropping in a UI, be careful not to include the trailing slash on the Distill post directory in the above command, or it will dump the contents of the old post’s directory into your posts directory, which is not what you want at all.\n\n\nPS. groovy warning box above! Quarto is built on Bootstrap 5 (at present), which means we get yummy candy like that for free:\n:::{.callout-important}\nNote: if you're...\n:::\nAnyway, now we’ve got the directory for a single Distill post copied into the Quarto posts directory, and we need to convert it so Quarto will render it. What do we need to do?\n\n1. Delete the extraneous files\nHere’s what we’ve got:\n\nThis will vary a bit by post content, but of these, the two we want are the .Rmd file, which is the original blog post content from Distill, and the supporting png image. The .html file can go, and the …_files directory (full of Javascript files) can go.\nThen we rename the .Rmd file to index.qmd, and we have this:\n\n\n\n2. Update the post’s YAML header\nThe old YAML header for the Distill blog looks like this:\n---\ntitle: \"Quickie for importing tasks to OmniFocus 3\"\ndescription: |\n  Copy and paste formatted text to mass-create tasks.\nauthor:\n  - name: Steve Linberg\n    url: https://slinberg.net\ndate: 2022-04-02\noutput:\n  distill::distill_article:\n    self_contained: false\npreview: https://www.omnigroup.com/assets/img/icons/omnifocus-web@2x.png\ncategories:\n  - omnifocus\n---\nSome of this will work in Quarto, some stuff has to be changed or removed. The current, very simple header for this post is:\ntitle: \"Porting slinberg.net from Distill to Quarto\"\ndate: \"2022-10-01\"\ncategories: [quarto, distill, blog]\nimage: quarto.png\nSo we can keep title and date in the original header. I don’t remember why the optional description attribute led with a vertical bar and a newline; the author tag can be deleted, as it will inherit the default values from posts/_metadata.yml; the output section can be deleted, the preview attribute can get quoted and renamed to image, and the categories tag gets pulled up to a single line, a square-bracketed list of categories. I’m adding “blog” as a category to blog posts, so far, since it will give another option for filtering blog posts as separate from static content on the site; not totally sure this will be needed, but going with it for the moment.\nThe updated YAML header now looks like this:\n---\ntitle: \"Quickie for importing tasks to OmniFocus 3\"\ndescription: \"Copy and paste formatted text to mass-create tasks.\"\ndate: \"2022-04-02\"\nimage: \"https://www.omnigroup.com/assets/img/icons/omnifocus-web@2x.png\"\ncategories: [blog, omnifocus]\n---\nThe description attribute, if present, will be used instead of a content preview on the listing page.\n\n\n3. Nuke the knitr setup block\n(For the life of me, I cannot remember, figure out, or google how to quote markdown within markdown, so to make this render I’m changing the backticks to single-quotes:)\n'''{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE)\n'''\nDelete that block, and any other extraneous knitr stuff unless you know why you need it.\nSave and render. For this post, we’re done; it’s in and looks good. The blog page now looks like this:\n\n\n\n4. Commit!\nDon’t forget: commit early, commit often:\ngit add posts/2022-04-02-quickie-for-importing-tasks-to-omnifocus-3/\ngit commit -m \"migrate old post\"\n\n\n5. Rinse and repeat\nNow, do the same process with the rest of the posts. I don’t have that many to move, so doing it manually isn’t too tedious, but it could be scripted for a lot of content if needed.\n\n\n\n\n\n\nNote\n\n\n\nNote: by not renaming the post directory, and by virtue of the fact that both Distill and Quarto use /posts as the top level for blog posts by default, the URLs for the posts won’t change when we switch. It’s rude to break your working URLs when migrating (even though the number of humans who correctly care about this is vanishingly small), so this is good news. If your posts directory will be called something else, or basically if anything changes, you should set up redirects for your old URLs so they point to the new ones."
  },
  {
    "objectID": "posts/2022-10-01_distill_to_quarto_part_1/index.html#optional-configure-for-github-pages",
    "href": "posts/2022-10-01_distill_to_quarto_part_1/index.html#optional-configure-for-github-pages",
    "title": "Porting slinberg.net from Distill to Quarto",
    "section": "(optional) Configure for Github Pages",
    "text": "(optional) Configure for Github Pages\nIf you’re hosting on Github pages, there are a couple of additional things to do:\n\n1. Set output to “docs”\nBy default, the site will render to the directory “_site”. Github Pages, where I’m presently hosting slinberg.net, publishes from the “docs” directory, so we need to tell Quarto to do that.\nIn _quarto.yml, add “output-dir: docs” to the project section, as shown:\nproject:\n  type: website\n  output-dir: docs\nRebuild the whole site from the terminal, in the root directory:\nquarto render\nDelete _site from your filesystem and repo, and add the “docs” directory:\ngit rm -rf _site\ngit commit -m \"Remove old _site directory\"\ngit add docs\ngit commit -m \"Add docs directory\"\n\n\n2. Create and commit a .nojekyll file\nGithub requires the presence of a file called .nojekyll to prevent rendering with Jekyll, Github’s site generation tool. Again, from your site’s root:\ntouch .nojekyll\ngit add .nojekyll\ngit commit -m \"Add .nojekyll file\"\n\n\n3. Create the CNAME file if you’re using a custom domain\nIf you are using a custom domain name (like slinberg.net), you must also create a file called CNAME in your site’s root, with the domain name in plain text followed by a carriage return. Of course, you also have to own the domain and have it pointed at Github correctly, a topic we’re not covering here. The domain name will not work correctly without this file."
  },
  {
    "objectID": "posts/2022-10-01_distill_to_quarto_part_1/index.html#other-conversion-notes",
    "href": "posts/2022-10-01_distill_to_quarto_part_1/index.html#other-conversion-notes",
    "title": "Porting slinberg.net from Distill to Quarto",
    "section": "Other conversion notes",
    "text": "Other conversion notes\nOther unordered odds and end from the porting process:\n\nHashpipe syntax\nOne of the nice things about Quarto is much more readable chunk options via the “hashpipe” syntax (# = “hash”, | = “pipe”, so #| = “hashpipe” 🙄). For example, we can turn this heavy thing:\n{r echo=FALSE, fig.cap=\"Figure from \n[The Visual Display of Quantitative Information](https://www.edwardtufte.com/tufte/books_vdqi),\np. 118\", out.width=400}\nknitr::include_graphics(\"badgraphic.png\")\nInto this more readable construct:\n{r}\n#| echo: FALSE\n#| fig-cap: Figure from [The Visual Display of Quantitative Information](https://www.edwardtufte.com/tufte/books_vdqi), p. 118\n#| out.with: 400\nknitr::include_graphics(\"badgraphic.png\")\n… in theory.\nIn practice, as of this writing, there’s a bug in Quarto that prevents this from working correctly in .qmd files, so… for the moment, we wait and keep it in the former style.\n\n\n.Rmd files still render\nI was a little surprised to see that my non-converted blog posts, copied straight over from the Distill blog and prior to the cleanup for Quarto, still rendered just fine. I guess that’s good, but I wasn’t expecting it. I’m still going to clean them up."
  },
  {
    "objectID": "posts/2022-10-01_distill_to_quarto_part_1/index.html#appendix-a-problems",
    "href": "posts/2022-10-01_distill_to_quarto_part_1/index.html#appendix-a-problems",
    "title": "Porting slinberg.net from Distill to Quarto",
    "section": "Appendix A: problems",
    "text": "Appendix A: problems\nRather than interrupt the basic narrative above, let’s stack the problems we hit along the way down here.\n\nThat pesky first image\nOne of the basic concepts in blogs and blog listings is the all-important thumbnail image that is used on the listing page.\nThere are basically two ways to implement this in Quarto: either explicitly specify it with the image atrribute in the YAML section of the post’s index.qmd file:\nimage: \"image.jpg\"\nor, omit this attribute, and in that case, Quarto will use the first image it finds in the post body (if any). The difference is: if you only want to use the image on the listing page, but not have it appear in the post itself, put it in the YAML header; if you want it to be used on both, then omit the YAML header and put it inline.\nThe problem is that if you do the latter, and the image is right at the start of the post (a header image, in other words), it will not render correctly if it happens to be within the range of the preview text (which doesn’t appear to be visibly configurable in Quarto, but it’s more or less the first line or two); this is because it doesn’t convert the filename path to a global path. It does in the listing itself, which is odd. You can see the result here, from one of the sample posts; the original code is:\nThis is the first post in a Quarto blog. Welcome!\n\n![](thumbnail.jpg)\nBut it we reverse it to put the image above the text:\n![](thumbnail.jpg)\n\nThis is the first post in a Quarto blog. Welcome!\nWe get this on the listing page:\n\nThis is Quarto failing to adjust the image’s pathname in the listing, though it does render the image correctly to the right as part of the listing structure.\nThis can be worked around with the simple but ugly hack of fully specifying the image’s pathname, as in:\n![](/posts/post-with-code/thumbnail.jpg)\n\nThis is the first post in a Quarto blog. Welcome!\nbut\n\nGross, and\nYou probably don’t want an inline image from the body appearing in the listing preview anyway.\n\nHopefully this issue will get resolved at some point."
  },
  {
    "objectID": "posts/2022-03-05-tufte-takes-no-prisoners/index.html",
    "href": "posts/2022-03-05-tufte-takes-no-prisoners/index.html",
    "title": "Tufte Takes No Prisoners",
    "section": "",
    "text": "Graphical decoration, which propers in technical publications as well as in commercial and media graphics, comes cheaper than the hard work required to produce intriguing numbers and secure evidence.\n\n…ouch.\nOK, let’s not overreact: he’s not saying “don’t strive for beauty” here. The main point is that visual clutter in charts and graphs, which can take many forms, at best pollutes the message and obfuscates the data, and at worst might be used to (attempt to) conceal a lack of data. That’s fair. He then goes on to show many examples of charts rendered almost unintelligible by over-use of fill patterns, made simple by modern computer-generated graphing systems, pointless use of three-dimensional effects that don’t represent data, and heavy gridlines that visually compete with data points.\nOn the subject of graph paper, he doesn’t hold back:\n\nMost ready-made graph paper comes with a darkly printed grid. The reverse (unprinted) side should be used, for then the lines show through faintly and do not clutter the data. If the paper is heavily gridded on both sides, throw it out.\n\nA little further on, he shows this monstrosity:\n\n\n\n\n\nFigure from The Visual Display of Quantitative Information, p. 118\n\n\n\n\n…introduced by this utter decimation:\n\nA series of weird three-dimensional displays appearing in the magazine American Education in the 1970s delighted connoisseurs of the graphically preposterous. Here five colors report, almost by happenstance, only five pieces of data (since the division within each year adds to 100 percent). This may well be the worst graphic ever to find its way into print.\n\nOn first read, I thought to myself: “I want to be a connoisseur of the graphically preposterous”. Then I thought it over a bit more and decided I wasn’t so sure.\nIn any event, I’m around the 2/3 point now in VDQI, enjoying many savagely entertaining examples of what not to do in the visual presentation of data. There are a few good examples scattered in as well, though with much lower overall frequency so far. Studying the wreckage of bad design can absolutely be educational, but with all due deference to the important work of learning from the mistakes of others, it is always easier to critique than to create. I am not “peeking ahead” out of sequence to see if he does this more in subsequent chapters; Saturday Mornings with Tufte™ are deliberately slow and meditative, with a cup of coffee and no electronic devices or distractions. So far this has been an informative and educational read, and I’m looking forward to the rest of it and then to moving on to “Beautiful Evidence”. But I’m still planning to try to create something beautiful in my upcoming poster, and hopefully I can find a way to do that that would also dodge the well-deserved barbs aimed at the many failed efforts shown in this book.\n\n(Endnote: I am a big fan of graph paper, and although most of my note-taking these days is on the ipad, I still have a big physical stash of my favorite, whitelines (non-referral link):\n\n\n\nFrom one of my whitelines notebooks\n\n\nIt uses a light gray tone with white gridlines instead of black, much easier on the eyes.)\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@online{linberg2022,\n  author = {Steve Linberg},\n  editor = {},\n  title = {Tufte {Takes} {No} {Prisoners}},\n  date = {2022-03-05},\n  url = {https://slinberg.net/posts/2022-03-05-tufte-takes-no-prisoners},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nSteve Linberg. 2022. “Tufte Takes No Prisoners.” March 5,\n2022. https://slinberg.net/posts/2022-03-05-tufte-takes-no-prisoners."
  },
  {
    "objectID": "posts/2022-02-05-saturday-mornings-with-tufte/index.html",
    "href": "posts/2022-02-05-saturday-mornings-with-tufte/index.html",
    "title": "Saturday mornings with Tufte",
    "section": "",
    "text": "As the world re-aligns itself around the tsunami of data that is already hitting us, though, we all know that quant-fu is only half the battle. Being able to manipulate and interpret data fluently is absolutely essential, but no less so is the ability to present and communicate it effectively. Data presentation skills are meaningless (and dangerous) if built atop a weak quantitative foundation, but all the quantitative skills in the world won’t save us if we can’t make the results of our work understandable.\n\n\n\nSaturday reading\n\n\nI’m taking a few hours every Saturday morning to read Edward Tufte’s “The Visual Display of Quantitative Information” and “Beautiful Evidence”. I’m not far enough in yet to articulate his vision or integrate his concepts into my own work, but it has the feeling of a correct path that I’ve learned to recognize from early forays in other fields. A lot of it is about decluttering, stripping away what is superfluous to leave only what is essential, which is one aspect of great art.\n\n\n\nSample page on time series\n\n\nOne of the things that I love about data science is that this principle is equally critical in both the quantitative and qualitative aspects of the field. Statistical and engineering skills help strip away unneeded or irrelevant data; information design skills help visually focus on the most important aspects of what remains, to deliver the message as clearly as possible.\n(And, right out of the gate on page 1 of VDQI, as the cool kids call it, is an idea for a short quantitative project that I’ll take up in the next post.)\n\n\n\nVDQI p1\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@online{linberg2022,\n  author = {Steve Linberg},\n  editor = {},\n  title = {Saturday Mornings with {Tufte}},\n  date = {2022-02-05},\n  url = {https://slinberg.net/posts/2022-02-05-saturday-mornings-with-tufte},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nSteve Linberg. 2022. “Saturday Mornings with Tufte.”\nFebruary 5, 2022. https://slinberg.net/posts/2022-02-05-saturday-mornings-with-tufte."
  },
  {
    "objectID": "steve.html",
    "href": "steve.html",
    "title": "About",
    "section": "",
    "text": "In summer 2022, I completed coursework for the Data Analytics and Computational Social Science (DACSS) Masters program at the University of Massachusetts, Amherst (formally graduating later this year). My present position is Senior Systems and Analytics Engineer at the Gandara Center in West Springfield, MA.\nI’ve worn many IT hats over the years, but coding is my first love."
  },
  {
    "objectID": "steve.html#education",
    "href": "steve.html#education",
    "title": "About",
    "section": "Education",
    "text": "Education\nMS, Data Analytics and Computational Social Science | 2022\nUniversity of Massachusetts, Amherst | Amherst, MA\nBA, Social Science | 1992\nHampshire College | Amherst, MA"
  },
  {
    "objectID": "steve.html#experience",
    "href": "steve.html#experience",
    "title": "About",
    "section": "Experience",
    "text": "Experience\nGandara Center, West Springfield, MA | Senior Systems and Analytics Engineer / CIO / IT Director | 2005 - Present\nSilicon Goblin Technologies, Amherst, MA | Owner / Programmer | 1999 - 2015\nRojo Networks, San Francisco, CA | Systems Administrator and Customer Service Lead | 2006-2008\nNational Center on Adult Literacy, University of Pennsylvania Graduate School of Education, Philadelphia, PA | Systems Programmer and Lead Web Developer | 1997-1999\nHolyoke Public Schools, Holyoke, MA | Literacy and GED Instructor | 1994-1997\nUnicom, Inc., Providence, RI | Systems Programmer and Technical Writer | 1983-1997"
  },
  {
    "objectID": "steve.html#interests",
    "href": "steve.html#interests",
    "title": "About",
    "section": "Interests",
    "text": "Interests\n\nData analytics, statistics, machine learning\nSoftware engineering\nPolitics, culture and the state of the world\nDrawing, painting, guitar, motorcycles, baking, gaming"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "slinberg.net",
    "section": "",
    "text": "I’m a software engineer, data analyst and systems/network admin, recently wrapping up my masters work in the Data Analytics and Computational Social Science (DACSS) program at the University of Massachusetts Amherst.\nThis site contains my blog with ruminations on computational social science, my own learning processes and discoveries, and related technical topics and snippets; selections of my academic work; contact information; and whatever other nuggets and tidbits pop up.\n\nData is the sword of the 21st century, those who wield it well, the Samurai\n– Jonathan Rosenberg\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOct 1, 2022\n\n\n11 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\nCopy and paste formatted text to mass-create tasks.\n\n\n\n\n\n\nApr 2, 2022\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\nEdward Tufte gets raw on chartjunk.\n\n\n\n\n\n\nMar 5, 2022\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\nThe importance of simplicity in statistical graphics\n\n\n\n\n\n\nFeb 19, 2022\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\nThe other half of data science skillbuilding\n\n\n\n\n\n\nFeb 5, 2022\n\n\n1 min\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow did I not know this\n\n\n\n\n\n\nFeb 2, 2022\n\n\n0 min\n\n\n\n\n\n\nNo matching items\n\n\n  \n\n\n\n\n\nSome selections from my academic work from the DACSS program at Umass Amherst\n\n\nSpring 2021: stuff from TaD, including the Parler project"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "slinberg.net",
    "section": "",
    "text": "Porting slinberg.net from Distill to Quarto\n\n\n\n\n\n\n\nquarto\n\n\ndistill\n\n\nblog\n\n\n\n\n\n\n\n\n\n\n\nOct 1, 2022\n\n\n11 min\n\n\n\n\n\n\n  \n\n\n\n\nQuickie for importing tasks to OmniFocus 3\n\n\n\n\n\n\n\nblog\n\n\nomnifocus\n\n\n\n\nCopy and paste formatted text to mass-create tasks.\n\n\n\n\n\n\nApr 2, 2022\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nTufte Takes No Prisoners\n\n\n\n\n\n\n\ntufte\n\n\ndesign\n\n\n\n\nEdward Tufte gets raw on chartjunk.\n\n\n\n\n\n\nMar 5, 2022\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\nPlayfair and the “Flatten the Curve” Graphic\n\n\n\n\n\n\n\ntufte\n\n\ndesign\n\n\n\n\nThe importance of simplicity in statistical graphics\n\n\n\n\n\n\nFeb 19, 2022\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nSaturday mornings with Tufte\n\n\n\n\n\n\n\ntufte\n\n\ndesign\n\n\n\n\nThe other half of data science skillbuilding\n\n\n\n\n\n\nFeb 5, 2022\n\n\n1 min\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPythagorean Theorem\n\n\n\n\n\n\n\nmath\n\n\n\n\nHow did I not know this\n\n\n\n\n\n\nFeb 2, 2022\n\n\n0 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#text-as-data",
    "href": "index.html#text-as-data",
    "title": "slinberg.net",
    "section": "Text as Data",
    "text": "Text as Data\nSpring 2021: stuff from TaD, including the Parler project"
  },
  {
    "objectID": "steve.html#selected-experience",
    "href": "steve.html#selected-experience",
    "title": "About",
    "section": "Selected Experience",
    "text": "Selected Experience\nGandara Center, West Springfield, MA | Senior Systems and Analytics Engineer / CIO / IT Director | 2005 - Present\nSilicon Goblin Technologies, Amherst, MA | Owner / Programmer | 1999 - 2015\nRojo Networks, San Francisco, CA | Systems Administrator and Customer Service Lead | 2006-2008\nNational Center on Adult Literacy, University of Pennsylvania Graduate School of Education, Philadelphia, PA | Systems Programmer and Lead Web Developer | 1997-1999\nHolyoke Public Schools, Holyoke, MA | Literacy and GED Instructor | 1994-1997\nUnicom, Inc., Providence, RI | Systems Programmer and Technical Writer | 1983-1997"
  },
  {
    "objectID": "index.html#contact",
    "href": "index.html#contact",
    "title": "slinberg.net",
    "section": "Contact",
    "text": "Contact\n\n steve@slinberg.net (professional) or slinberg@umass.edu (academic)\n @stevelinberg"
  }
]